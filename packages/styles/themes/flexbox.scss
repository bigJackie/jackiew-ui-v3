$flex-size-breakpoints: (
  undefined: "",
  xs: "xs-",
  sm: "sm-",
  md: "md-",
  lg: "lg-",
  xl: "xl-",
);
$flex-direction-items: ("row", "row-reverse", "column", "column-reverse");

$flex-justify-items: (
  start: "flex-start",
  end: "flex-end",
  center: "center",
  space-between: "space-between",
  space-around: "space-around",
  space-evenly: "space-evenly",
);

$flex-align-items: (
  start: "flex-start",
  end: "flex-end",
  center: "center",
  baseline: "baseline",
  stretch: "stretch",
);

$flex-wrap-items: (
  nowrap: "nowrap",
  wrap: "wrap",
  wrap-reverse: "wrap-reverse",
);

@include b(application) {
  @each $size_name, $size_item in $flex-size-breakpoints {
    @media only screen and (max-width: getBreakPoint($size_name)) and (min-width: getBreakPointSmall($size_name)) {
      /* flex */
      .#{$size_item}flex {
        display: flex !important;
      }

      /* inline-flex */
      .#{$size_item}inline-flex {
        display: inline-flex !important;
      }

      /* flex-direction */
      @each $direction in $flex-direction-items {
        .flex-#{$size_item}#{$direction} {
          flex-direction: #{$direction} !important;
        }
      }

      /* justify-content */
      @each $justify_name, $justify_item in $flex-justify-items {
        .justify-#{$size_item}#{$justify_name} {
          justify-content: #{$justify_item} !important;
        }
      }

      /* align-items */
      @each $align_name, $align_item in $flex-align-items {
        .align-#{$size_item}#{$align_name} {
          align-items: #{$align_item} !important;
        }
      }

      /* flex-wrap */
      @each $wrap_name, $wrap_item in $flex-wrap-items {
        .flex-#{$size_item}#{$wrap_name} {
          flex-wrap: #{$wrap_item} !important;
        }
      }
    }
  }

  /* JUSTIFY-CONTENT */
}
